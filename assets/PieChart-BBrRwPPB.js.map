{"version":3,"file":"PieChart-BBrRwPPB.js","sources":["../../src/components/charts/PieChart.tsx"],"sourcesContent":["import { memo } from 'react';\n\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Section } from '@telegram-apps/telegram-ui';\nimport { Pie } from 'react-chartjs-2';\nimport { useLocalization } from '@/providers/LocalizationProvider';\n\n// Register Chart.js components\nChartJS.register(ArcElement, Tooltip, Legend);\n\ninterface PieChartProps {\n  data: {\n    labels: string[];\n    datasets: {\n      data: number[];\n      backgroundColor: string[];\n      borderColor: string[];\n      borderWidth: number;\n    }[];\n  };\n  title?: string;\n}\n\nconst PieChart = ({ data, title }: PieChartProps) => {\n  const { formatCurrency } = useLocalization();\n  \n  return (\n    <Section header={title}>\n      <Pie\n        data={data}\n        options={{\n          responsive: true,\n          maintainAspectRatio: true,\n          // aspectRatio: width / height,\n          plugins: {\n            legend: {\n              position: 'bottom',\n              labels: {\n                usePointStyle: true,\n              },\n            },\n            tooltip: {\n              callbacks: {\n                label: function(context) {\n                  const label = context.label || '';\n                  const value = context.raw as number;\n                  const total = context.dataset.data.reduce((a, b) => (a as number) + (b as number), 0);\n                  const percentage = ((value / total) * 100).toFixed(1);\n                  return `${label}: ${formatCurrency(value)} (${percentage}%)`;\n                }\n              }\n            }\n          },\n        }}\n      />\n    </Section>\n  );\n};\n\nexport default memo(PieChart);\n"],"names":["ChartJS","register","ArcElement","Tooltip","Legend","memo","data","title","formatCurrency","useLocalization","jsx","Section","header","children","Pie","options","responsive","maintainAspectRatio","plugins","legend","position","labels","usePointStyle","tooltip","callbacks","label","context","value","raw","percentage","dataset","reduce","a","b","toFixed"],"mappings":"4NAQAA,EAAQC,SAASC,EAAYC,EAASC,GAetC,MAoCeC,EAAAA,EAAAA,MApCE,EAAGC,OAAMC,YAClB,MAAAC,eAAEA,GAAmBC,IAGzB,OAAAC,EAAAA,IAACC,EAAQ,CAAAC,OAAQL,EACfM,SAAAH,EAAAA,IAACI,EAAA,CACCR,OACAS,QAAS,CACPC,YAAY,EACZC,qBAAqB,EAErBC,QAAS,CACPC,OAAQ,CACNC,SAAU,SACVC,OAAQ,CACNC,eAAe,IAGnBC,QAAS,CACPC,UAAW,CACTC,MAAO,SAASC,GACR,MAAAD,EAAQC,EAAQD,OAAS,GACzBE,EAAQD,EAAQE,IAEhBC,GAAeF,EADPD,EAAQI,QAAQxB,KAAKyB,QAAO,CAACC,EAAGC,IAAOD,EAAgBC,GAAc,GAC7C,KAAKC,QAAQ,GACnD,MAAO,GAAGT,MAAUjB,EAAemB,OAAWE,KAAU,SAOtE"}