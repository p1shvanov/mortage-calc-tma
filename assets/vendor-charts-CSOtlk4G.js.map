{"version":3,"file":"vendor-charts-CSOtlk4G.js","sources":["../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/react-chartjs-2/dist/index.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.8\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","array","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","Ticks","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","meta","count","iScale","_parsing","parsed","parse","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","property","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","animationsDisabled","pointCount","distanceToDefinedLo","findIndex","distanceToDefinedHi","_getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","_scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","bind","_fullLoop","pointPosition","getPointPositionForValue","xCenter","yCenter","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart$1","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","Chart","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","getDistanceFromCenterForValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","_setMinAndMaxByKey","LinearScale","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","pointLabels","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","getIndexAngle","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","angleLines","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","destroyChart","useEffect","nextOptions","setOptions","React","createElement","role","forwardRef","createTypedChart","registerables","Line","Bar","Radar","Doughnut","Pie"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}